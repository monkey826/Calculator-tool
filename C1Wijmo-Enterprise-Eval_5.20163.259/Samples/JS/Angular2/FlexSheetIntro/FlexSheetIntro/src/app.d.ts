/// <reference path="../typings/globals/core-js/index.d.ts" />
import * as wjcGridSheet from 'wijmo/wijmo.grid.sheet';
import * as wjcInput from 'wijmo/wijmo.input';
import { DataSvc } from './services/DataSvc';
export declare class AppCmp {
    protected dataSvc: DataSvc;
    data: any[];
    sortManager: wjcGridSheet.SortManager;
    columns: string[];
    fonts: any[];
    fontSizeList: any[];
    selectionFormatState: wjcGridSheet.IFormatState;
    selection: any;
    mergeState: any;
    isFrozen: boolean;
    undoStack: wjcGridSheet.UndoStack;
    currentCellData: any;
    fileName: string;
    private _format;
    private _updatingSelection;
    private _applyFillColor;
    flexSheetIntro: wjcGridSheet.FlexSheet;
    sortSheet: wjcGridSheet.FlexSheet;
    formatSheet: wjcGridSheet.FlexSheet;
    mergeCellSheet: wjcGridSheet.FlexSheet;
    dragDropSheet: wjcGridSheet.FlexSheet;
    frozenSheet: wjcGridSheet.FlexSheet;
    undoSheet: wjcGridSheet.FlexSheet;
    formulaSheet: wjcGridSheet.FlexSheet;
    customFuncSheet: wjcGridSheet.FlexSheet;
    excelIOSheet: wjcGridSheet.FlexSheet;
    cboFontName: wjcInput.ComboBox;
    cboFontSize: wjcInput.ComboBox;
    colorPicker: wjcInput.ColorPicker;
    constructor(dataSvc: DataSvc);
    format: string;
    flexSheetInit(flexSheetIntro: wjcGridSheet.FlexSheet): void;
    sortSheetInit(sortSheet: wjcGridSheet.FlexSheet): void;
    formatSheetInit(formatSheet: wjcGridSheet.FlexSheet): void;
    mergeCellSheetInit(mergeCellSheet: wjcGridSheet.FlexSheet): void;
    dragDropSheetInit(dragDropSheet: wjcGridSheet.FlexSheet): void;
    frozenSheetInit(frozenSheet: wjcGridSheet.FlexSheet): void;
    undoSheetInit(undoSheet: wjcGridSheet.FlexSheet): void;
    formulaSheetInit(formulaSheet: wjcGridSheet.FlexSheet): void;
    customFuncSheetInit(customFuncSheet: wjcGridSheet.FlexSheet): void;
    excelIOSheetInit(excelIOSheet: wjcGridSheet.FlexSheet): void;
    cboFontNameInit(cboFontName: wjcInput.ComboBox): void;
    cboFontSizeInit(cboFontSize: wjcInput.ComboBox): void;
    colorPickerInit(colorPicker: wjcInput.ColorPicker): void;
    commitSort(): void;
    cancelSort(): void;
    addSortLevel(): void;
    deleteSortLevel(): void;
    copySortLevel(): void;
    moveSortLevel(offset: any): void;
    applySortColumnIndex(e: any, sortItem: any): void;
    applySortAscending(e: any, sortItem: any): void;
    applyCellTextAlign(textAlign: any): void;
    applyBoldStyle(): void;
    applyUnderlineStyle(): void;
    applyItalicStyle(): void;
    showColorPicker(e: any, isFillColor: any): void;
    mergeCells(): void;
    freezeCells(): void;
    undo(): void;
    redo(): void;
    load(): void;
    save(): void;
    private _getColumns(flexSheet);
    private _initDataMapForBindingSheet(flexSheet);
    private _buildDataMap(items);
    private _updateSelection(flexSheet, sel);
    private _checkFontfamily(fontFamily);
    private _checkFontSize(fontSize);
    private _cumulativeOffset(element);
    private _generateExpenceReport(flexSheet);
    private _setExpenseData(flexSheet);
    private _applyStyleForExpenceReport(flexSheet);
}
export declare class AppModule {
}
