var Dialogs = React.createClass({
    getInitialState: function () {
        return {
            dialogs: {}
        };
    },
    // event handlers
    initDialog: function (s, e) {
        var dlgId = s.hostElement.id;
        this.state.dialogs[dlgId] = s;
    },
    handleClick: function (dlgId) {
        this.state.dialogs[dlgId].show();
    },
    render: function () {
        return React.createElement("div", null, 
            React.createElement("h2", {id: "Menu"}, "Dialogs and Popups"), 
            React.createElement("p", null, 
                "The ", 
                React.createElement("b", null, "Popup"), 
                " control can be used to display arbitrary content as dialogs" + ' ' + "(AKA modals, centered on the screen, without an owner element)," + ' ' + "or as popups (AKA popovers, located relative to an owner element)."), 
            React.createElement("h3", null, "Dialogs"), 
            React.createElement("p", null, "Click the buttons below to see dialogs:"), 
            React.createElement("div", {className: "row"}, 
                React.createElement("div", {className: "col-md-6"}, 
                    React.createElement("div", null, 
                        React.createElement("ul", {className: "nav nav-tabs", role: "tablist"}, 
                            React.createElement("li", {className: "active"}, 
                                React.createElement("a", {href: "#dlgJsx", role: "tab", "data-toggle": "tab"}, "JSX")
                            ), 
                            React.createElement("li", null, 
                                React.createElement("a", {href: "#dlgJs", role: "tab", "data-toggle": "tab"}, "JS")
                            )), 
                        React.createElement("div", {className: "tab-content"}, 
                            React.createElement("div", {className: "tab-pane active pane-content", id: "dlgJsx"}, 
                                "<p>", 
                                '\n', 
                                '    ', 
                                "Click to see a modal dialog:", 
                                '\n', 
                                '    ', 
                                "<button type=\"button\" className=\"btn\" onClick=", 
                                '{', 
                                "this.handleClick.bind(this, 'dlg1')}>", 
                                '\n', 
                                '        ', 
                                "Click", 
                                '\n', 
                                '    ', 
                                "</button>", 
                                '\n', 
                                "</p>", 
                                '\n', 
                                "<Wj.Popup id=\"dlg1\" modal=", 
                                '{', 
                                "true} hide-trigger=\"None\" initialized=", 
                                '{', 
                                "this.initDialog}>", 
                                '\n', 
                                '    ', 
                                "<TheDialog/>", 
                                '\n', 
                                "</Wj.Popup>", 
                                '\n', 
                                "<p>", 
                                '\n', 
                                '    ', 
                                "Click to see a modeless dialog:", 
                                '\n', 
                                '    ', 
                                "<button type=\"button\" className=\"btn\" onClick=", 
                                '{', 
                                "this.handleClick.bind(this, 'dlg2')}>", 
                                '\n', 
                                '        ', 
                                "Click", 
                                '\n', 
                                '    ', 
                                "</button>", 
                                '\n', 
                                "</p>", 
                                '\n', 
                                "<Wj.Popup id=\"dlg2\" modal=", 
                                '{', 
                                "false} initialized=", 
                                '{', 
                                "this.initDialog}>", 
                                '\n', 
                                '    ', 
                                "<TheDialog/>", 
                                '\n', 
                                "</Wj.Popup>", 
                                '\n'), 
                            React.createElement("div", {className: "tab-pane pane-content", id: "dlgJs"}, 
                                "getInitialState: function () ", 
                                '{', 
                                '\n', 
                                '    ', 
                                "return ", 
                                '{', 
                                '\n', 
                                '        ', 
                                "dialogs: ", 
                                '{', 
                                "}", 
                                '\n', 
                                '    ', 
                                "}", 
                                '\n', 
                                "},", 
                                '\n', 
                                '\n', 
                                // event handlers{'\n'}
                                "// event handlers", 
                                '\n', 
                                "initDialog: function (s, e) ", 
                                '{', 
                                '\n', 
                                '    ', 
                                "var dlgId = s.hostElement.id;", 
                                '\n', 
                                '    ', 
                                "this.state.dialogs[dlgId] = s;", 
                                '\n', 
                                "},", 
                                '\n', 
                                "handleClick: function (dlgId) ", 
                                '{', 
                                '\n', 
                                '    ', 
                                "this.state.dialogs[dlgId].show();", 
                                '\n', 
                                "}, ...")))
                ), 
                React.createElement("div", {className: "col-md-6"}, 
                    React.createElement("p", null, 
                        "Click to see a modal dialog: ", 
                        ' ', 
                        React.createElement("button", {type: "button", className: "btn", onClick: this.handleClick.bind(this, 'dlg1')}, "Click")), 
                    React.createElement(Wj.Popup, {id: "dlg1", modal: true, "hide-trigger": "None", initialized: this.initDialog}, 
                        React.createElement(TheDialog, null)
                    ), 
                    React.createElement("p", null, 
                        "Click to see a modeless dialog: ", 
                        ' ', 
                        React.createElement("button", {type: "button", className: "btn", onClick: this.handleClick.bind(this, 'dlg2')}, "Click")), 
                    React.createElement(Wj.Popup, {id: "dlg2", modal: false, initialized: this.initDialog}, 
                        React.createElement(TheDialog, null)
                    ))), 
            React.createElement("h3", null, "Popups/popovers"), 
            React.createElement("p", null, "Click the buttons below to see popovers:"), 
            React.createElement("div", {className: "row"}, 
                React.createElement("div", {className: "col-md-6"}, 
                    React.createElement("ul", {className: "nav nav-tabs", role: "tablist"}, 
                        React.createElement("li", {className: "active"}, 
                            React.createElement("a", {href: "#popJsx", role: "tab", "data-toggle": "tab"}, "JSX")
                        )
                    ), 
                    React.createElement("div", {className: "tab-content"}, 
                        React.createElement("div", {className: "tab-pane active pane-content", id: "popJsx"}, 
                            '<p>\n', 
                            '    Click to open, move focus away to close:\n', 
                            '    <button id="btn1" type="button" className="btn">\n', 
                            '        Click\n', 
                            '    </button>\n', 
                            '</p>\n', 
                            '<Wj.Popup className="popover" owner="#btn1" showTrigger="Click" hideTrigger="Blur">\n', 
                            '    <ThePopup/>\n', 
                            '</Wj.Popup>\n', 
                            '<p>\n', 
                            '    Click to open, click again to close:\n', 
                            '    <button id="btn2" type="button" className="btn">\n', 
                            '        Click\n', 
                            '    </button>\n', 
                            '</p>\n', 
                            '<Wj.Popup className="popover" owner="#btn2" showTrigger="Click" hideTrigger="Click">\n', 
                            '    <ThePopup/>\n', 
                            '</Wj.Popup>\n', 
                            '<p>\n', 
                            '    Click to open, click close button on popup to close:\n', 
                            '    <button id="btn3" type="button" className="btn">\n', 
                            '        Click\n', 
                            '    </button>\n', 
                            '</p>\n', 
                            '<Wj.Popup className="popover" owner="#btn3" showTrigger="Click" hideTrigger="None">\n', 
                            '    <ThePopup/>\n', 
                            '</Wj.Popup>')
                    )), 
                React.createElement("div", {className: "col-md-6"}, 
                    React.createElement("p", null, 
                        "Click to open, move focus away to close: ", 
                        ' ', 
                        React.createElement("button", {id: "btn1", type: "button", className: "btn"}, "Click")), 
                    React.createElement(Wj.Popup, {className: "popover", owner: "#btn1", showTrigger: "Click", hideTrigger: "Blur"}, 
                        React.createElement(ThePopup, null)
                    ), 
                    React.createElement("p", null, 
                        "Click to open, click again to close: ", 
                        ' ', 
                        React.createElement("button", {id: "btn2", type: "button", className: "btn"}, "Click")), 
                    React.createElement(Wj.Popup, {className: "popover", owner: "#btn2", showTrigger: "Click", hideTrigger: "Click"}, 
                        React.createElement(ThePopup, null)
                    ), 
                    React.createElement("p", null, 
                        "Click to open, click close button on popup to close: ", 
                        ' ', 
                        React.createElement("button", {id: "btn3", type: "button", className: "btn"}, "Click")), 
                    React.createElement(Wj.Popup, {className: "popover", owner: "#btn3", showTrigger: "Click", hideTrigger: "None"}, 
                        React.createElement(ThePopup, null)
                    ))));
    }
});
var TheDialog = React.createClass({
    render: function () {
        return React.createElement("form", null, 
            React.createElement("h4", {className: "modal-header"}, 
                "Update Account Data", 
                React.createElement("button", {type: "button", tabindex: "-1", className: "close wj-hide"}, "× ")), 
            React.createElement("div", {className: "modal-body"}, 
                React.createElement("label", null, 
                    "Name:", 
                    React.createElement("input", {className: "form-control"})), 
                React.createElement("br", null), 
                React.createElement("label", null, 
                    "Email: ", 
                    React.createElement("input", {className: "form-control"})), 
                React.createElement("br", null), 
                React.createElement("label", null, 
                    "Password: ", 
                    React.createElement("input", {className: "form-control", type: "password"}))), 
            React.createElement("div", {className: "modal-footer"}, 
                React.createElement("button", {className: "btn btn-primary wj-hide"}, "OK")
            ));
    }
});
var ThePopup = React.createClass({
    render: function () {
        return React.createElement("div", null, 
            React.createElement("h3", {className: "popover-title"}, "Title"), 
            React.createElement("div", {className: "popover-content"}, 
                React.createElement("form", {name: "popoverForm"}, 
                    React.createElement("p", null, 
                        "Hello Popup", 
                        React.createElement("br", null), 
                        "This is a multiline message!"), 
                    React.createElement("pre", null, 
                        "2 + 3 = ", 
                        React.createElement("span", {className: ""}, "5")), 
                    React.createElement("div", {className: "form-group"}, 
                        React.createElement("div", {className: "input-group"}, 
                            React.createElement("div", {className: "input-group-addon"}, "@"), 
                            React.createElement("input", {className: "form-control", type: "email", placeholder: "Enter email"}))
                    ), 
                    React.createElement("div", {className: "form-actions"}, 
                        React.createElement("button", {type: "button", className: "btn btn-danger wj-hide"}, "Close"), 
                        React.createElement("button", {type: "button", className: "btn btn-primary wj-hide"}, "Save changes")))
            ));
    }
});
//# sourceMappingURL=Dialogs.js.map