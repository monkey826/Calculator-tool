<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>HTML5 and AngularJS Validation</title>

    <!-- Angular/Bootstrap -->
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.15/angular.min.js" type="text/javascript"></script>
    <link rel="stylesheet" type="text/css" href="https://netdna.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" />

    <!-- Wijmo -->
    <script src="scripts/vendor/wijmo.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.grid.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.angular.min.js" type="text/javascript"></script>
    <link href="styles/vendor/wijmo.min.css" rel="stylesheet" />

    <!-- app scripts/styles -->
    <script src="scripts/app.js" type="text/javascript"></script>
    <script src="scripts/controllers/appCtrl.js" type="text/javascript"></script>
    <link href="styles/app.css" rel="stylesheet" />
</head>

<body ng-app="app" ng-controller="appCtrl">
    <div class="container">

        <h1>
            Grid Validation</h1>
        <p>
            This sample shows how you can add validation to a <b>FlexGrid</b>,
            so that it displays errors in rows and cells. This will prevent users
            from leaving edit mode until they provide valid values for the 
            cells.</p>
        <p>
            The validation logic is implemented by setting the <b>getError</b>
            property of the <b>CollectionView</b>, being used as a data source,
            to a callback method. This method takes an item and a property name as
            parameters, and returns an error message if the current property
            value is invalid.</p>

        <wj-flex-grid
            items-source="data"
            show-alternating-rows="false"
            allow-add-new="true"
            show-errors="{{showErrors}}"
            validate-edits="{{validateEdits}}"
            initialized="enableCustomValidation(s,e)">
            <wj-flex-grid-column binding="customer.firstName" header="First"></wj-flex-grid-column>
            <wj-flex-grid-column binding="customer.lastName" header="Last"></wj-flex-grid-column>
            <wj-flex-grid-column binding="country" header="Country"></wj-flex-grid-column>
            <wj-flex-grid-column binding="downloads" header="Downloads" format="n0"></wj-flex-grid-column>
            <wj-flex-grid-column binding="sales" header="Sales" format="n2"></wj-flex-grid-column>
            <wj-flex-grid-column binding="expenses" header="Expenses" format="n2"></wj-flex-grid-column>
            <wj-flex-grid-column binding="active" header="Active"></wj-flex-grid-column>
        </wj-flex-grid>

        <h3>
            Grid Validation Properties
        </h3>
        <p>
            The <b>showErrors</b> property determines whether the grid should add the
            <b>wj-state-invalid</b> class to cells that contain errors:</p>
        <label>
            Show Errors 
            <input type="checkbox" ng-model="showErrors" />
        </label>
        <p>
            The <b>validateEdits</b> property determines whether the grid should keep
            cells in edit mode while there are validation errors:</p>
        <label>
            Validate Edits 
            <input type="checkbox" ng-model="validateEdits" />
        </label>

        <h3>
            Additional Custom Validation
        </h3>
        <p>
            In addition to the built-in validation, you can implement your own custom
            behaviors using code.</p>
        <p>
            For example, if you check the box below the grid will handle the <b>cellEditEnded</b>
            event to check whether there are any validation errors in the row that was just edited.
            If any errors are detected, the grid will select the invalid cell and get back 
            into edit mode:</p>
        <label>
            Custom Validation 
            <input type="checkbox" ng-model="customValidation" />
        </label>
    </div>
    <script src="http://cdn.wijmo.com/wijmo.sample.toolbar.js" type="text/javascript"></script>
</body>
</html>
