var Theming = React.createClass({
    render: function () {
        return React.createElement("div", null, 
            React.createElement("h2", null, "Theming"), 
            React.createElement("p", null, "The appearance of the FlexChart is defined in CSS. In addition to the default theme, we" + ' ' + "include about a dozen professionally designed themes that customize the appearance of" + ' ' + "all Wijmo controls to achieve a consistent, attractive look."), 
            React.createElement("p", null, "To customize the appearance of the chart, inspect the elements you want to style and" + ' ' + "create some CSS rules that apply to those elements."), 
            React.createElement("p", null, 
                "For example, if you right-click one of the labels on the X axis in IE or Chrome, you" + ' ' + "will see that it is an element with the ", 
                React.createElement("b", null, "\"wj-label\""), 
                " class that is contained in an" + ' ' + "element with the ", 
                React.createElement("b", null, "\"wj-axis-x\""), 
                " class, which is contained in the the top-level control" + ' ' + "element that has the ", 
                React.createElement("b", null, "\"wj-flexchart\""), 
                " class. The first CSS rule in this example uses" + ' ' + "this information to customize the X labels. The rule selector adds the additional" + ' ' + "requirement, that the parent element must have the ", 
                React.createElement("b", null, "\"wj-flexchart\""), 
                " and the", 
                React.createElement("b", null, "\"custom-flex-chart\""), 
                " classes. Without this, the rule would apply to the all charts on the" + ' ' + "page."), 
            React.createElement("div", {className: "row"}, 
                React.createElement("div", {className: "col-md-6"}, 
                    React.createElement("div", null, 
                        React.createElement("ul", {className: "nav nav-tabs", role: "tablist"}, 
                            React.createElement("li", {className: "active"}, 
                                React.createElement("a", {href: "#thmJsx", role: "tab", "data-toggle": "tab"}, "JSX")
                            ), 
                            React.createElement("li", null, 
                                React.createElement("a", {href: "#thmCss", role: "tab", "data-toggle": "tab"}, "CSS")
                            )), 
                        React.createElement("div", {className: "tab-content"}, 
                            React.createElement("div", {className: "tab-pane active pane-content", id: "thmJsx"}, 
                                '<Wj.FlexChart\n', 
                                '    className="custom-flex-chart"\n', 
                                '    itemsSource={ Util.getData() }\n', 
                                '    bindingX="country"\n', 
                                '    series={[\n', 
                                '        { name: \'Sales\', binding: \'sales\' },\n', 
                                '        { name: \'Expenses\', binding: \'expenses\' },\n', 
                                '        { name: \'Downloads\', binding: \'downloads\' }\n', 
                                '    ]} />'), 
                            React.createElement("div", {className: "tab-pane pane-content", id: "thmCss"}, 
                                '.custom-flex-chart.wj-flexchart .wj-axis-x .wj-label {\n', 
                                '    font-family: Courier New, Courier, monospace;\n', 
                                '    font-weight: bold;\n', 
                                '}\n', 
                                '.custom-flex-chart.wj-flexchart .wj-legend .wj-label {\n', 
                                '    font-family: Courier New, Courier, monospace;\n', 
                                '    font-weight: bold;\n', 
                                '}\n', 
                                '.custom-flex-chart.wj-flexchart .wj-legend > rect {\n', 
                                '    fill: #f8f8f8;\n', 
                                '    stroke: #c0c0c0;\n', 
                                '}\n', 
                                '.custom-flex-chart.wj-flexchart .wj-plot-area > rect {\n', 
                                '    fill: #f8f8f8;\n', 
                                '    stroke: #c0c0c0;\n', 
                                '}')))
                ), 
                React.createElement("div", {className: "col-md-6"}, 
                    React.createElement("h4", null, "Result (live):"), 
                    React.createElement(Wj.FlexChart, {className: "custom-flex-chart", itemsSource: Util.getData(), bindingX: "country", series: [
                        { name: 'Sales', binding: 'sales' },
                        { name: 'Expenses', binding: 'expenses' },
                        { name: 'Downloads', binding: 'downloads' }
                    ]}))));
    }
});
//# sourceMappingURL=Theming.js.map